<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <aop:aspectj-autoproxy />
    <!--该属性默认为false。设为true 表示强制使用cglib代理，而不是java本身的代理 -->
    <aop:config proxy-target-class="true" />

    <context:annotation-config />
    <context:component-scan base-package="com.wq"/>


	<!-- -Dscenic.local.callback.path=E:\知景区\scenic-local-root_szsjzc_20200417\scenic-local-callback-pom\scenic-local-callback-app\src\main\resources -->
	<bean id="propertiesConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="UTF-8"/>
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
            	<value>classpath:./sysconfig.properties</value>
            	<value>classpath:./common.properties</value>
            </list>
        </property>
    </bean>

    <!--TODO 把配置文件属性注入自定义类  以便在程序中获取变量-->
    <!--<bean id="moponPropertiesConfigLoad" class="com.mopon.component.properties.util.common.MoponPropertiesForFileLoad" lazy-init="false" depends-on="propertiesConfig" init-method="initializer">-->
		<!--<property name="springProperties" ref="propertiesConfig"/>-->
	<!--</bean>-->
    
 	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:log4j.properties</value>
			</list>
		</property>
	</bean>


<!--MVC start-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="UTF-8">-->
        <!--<property name="maxUploadSize" value="104857600"/>&lt;!&ndash;100MB&ndash;&gt;-->
    <!--</bean>-->

    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0">-->
        <!--<property name="mediaTypes">-->
            <!--<map><entry key="html" value="text/html" /></map>-->
        <!--</property>-->
        <!--<property name="viewResolvers">-->
            <!--<list>-->
                <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="10" />-->
                <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"-->
                      <!--p:order="0" p:prefix="/WEB-INF/views/" p:suffix=".jsp" p:viewClass="org.springframework.web.servlet.view.JstlView" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters>-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list>-->
                        <!--<value>application/json;charset=UTF-8</value>-->
                        <!--<value>text/html;charset=UTF-8</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->
<!--MVC end-->

	<import resource="spring-data-source-master.xml"/>
	<import resource="spring-redis-config.xml"/>
</beans>