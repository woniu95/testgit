<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" 
				http://www.springframework.org/schema/aop   
                http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                http://www.springframework.org/schema/context   
                http://www.springframework.org/schema/context/spring-context-3.2.xsd 
                http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
                

    <!-- redis数据源 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle.config}" />
        <!-- 最大空连接数 -->
        <property name="maxTotal" value="${redis.maxTotal.config}" />
        <!-- 最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis.config}" />
        <!-- 返回连接时，检测连接是否成功 -->
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="true"/>
    </bean>

    <!-- Spring-redis连接池管理工厂 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!-- IP地址 -->
        <property name="hostName" value="${redis.server.host}" />
        <!-- 端口号 -->
        <property name="port" value="${redis.server.port}" />
        <!--<property name="password" value="${redis.password}" />-->
        <!-- 超时时间 默认2000-->
        <property name="timeout" value="${redis.timeout}" />
        <!-- 连接池配置引用 -->
        <property name="poolConfig" ref="poolConfig" />
        <!-- usePool：是否使用连接池 -->
        <property name="usePool" value="true"/>
    </bean>

    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="false"></property>
    </bean>
    <!-- string template definition -->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="false"></property>
    </bean>

    <!--自定义redis工具类,在需要缓存的地方注入此类  -->
    <bean id="redisService" class="com.wq.redis.RedisDataService">
        <constructor-arg ref="redisTemplate"/>
        <constructor-arg ref="stringRedisTemplate"/>
    </bean>


    <!-- mongodb start-->
    <bean id="mongoClient" class="com.mongodb.MongoClient">
       <constructor-arg index="0"  name="host" value="${mongoDB.server.host}"/>
       <constructor-arg index="1" name="port" value="${mongoDB.server.port}"/>
    </bean>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate" >
        <constructor-arg index="0" type="com.mongodb.Mongo" ref="mongoClient"/>
        <constructor-arg index="1" type="java.lang.String" value="${mongoDB.database}"/>
    </bean>
    <!-- mongodb end-->


</beans>